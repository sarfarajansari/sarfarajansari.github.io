{"version":3,"sources":["components/navbar/sidebarData.js","components/app_data/App_data.js","components/navbar/Navbar.js","components/hero/Hero.js","components/animatedTitle/animatedTitle.jsx","App.js","reportWebVitals.js","index.js"],"names":["sidebarData","title","path","cName","app_data","Navbar","s","location","useLocation","useState","sidebar","setsidebar","console","log","Provider","value","color","className","to","id","onClick","map","item","index","pathname","Hero","class","data-content","style","textAlign","viewBox","fillOpacity","d","fill","AnimatedTitle","titleText","containerRef","useRef","useEffect","gsap","window","k","ptags","current","children","i","length","j","String","scrollTrigger","trigger","scrub","innerWidth","start","duration","translateY","delay","rotate","animateTitle","ref","split","word","letter","word_length","l","left_spacing","left","App","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ab15c17.chunk.js","sourcesContent":["\r\nexport const sidebarData =[\r\n    \r\n    {\r\n        title:'Home',\r\n        path:\"/\",\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'Projects',\r\n        path:\"/projects\",\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'Services',\r\n        path:\"/services\",\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'About',\r\n        path:\"/about\",\r\n        cName:'nav-text'\r\n    },\r\n    \r\n\r\n]","export const app_data={\r\n    \"name\":\"Sarfaraj\",\r\n    \"url\":\"http://127.0.0.1:8000\"\r\n}","import React, { useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport * as Fa from \"react-icons/fa\";\r\nimport * as Ai from \"react-icons/ai\";\r\nimport * as Gr from \"react-icons/gr\";\r\n\r\nimport { sidebarData } from \"./sidebarData\";\r\nimport { app_data } from \"../app_data/App_data\";\r\nimport \"./Navbar.css\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nfunction get_icon2(s) {\r\n  if (!s) {\r\n    return <Fa.FaBars color={\"#f82c15\"} />;\r\n  } else {\r\n    return <Ai.AiOutlineClose color={\"rgb(177, 37, 13)\"} />;\r\n  }\r\n}\r\n\r\nfunction Navbar() {\r\n  const location = useLocation();\r\n  const [sidebar, setsidebar] = useState(false);\r\n\r\n  console.log(location);\r\n  return (\r\n    <IconContext.Provider value={{ color: \"#fff\" }}>\r\n      <div>\r\n        <div className=\"Navbar-cust nav-box-element\">\r\n          <div className=\"navbar-brand text-center\">\r\n            <div className=\"clay-logo\"></div>\r\n            <div>{app_data.name}</div>\r\n          </div>\r\n          <div className=\"toggle\">\r\n            <Link\r\n              to=\"#\"\r\n              id=\"toggle-btn\"\r\n              onClick={() => setsidebar(!sidebar)}\r\n              className={\r\n                sidebar\r\n                  ? \"menu-bars toggles-nav-sm active\"\r\n                  : \"menu-bars toggles-nav-sm\"\r\n              }\r\n            >\r\n              {get_icon2(sidebar)}\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"nav-menu-lg\">\r\n            {sidebarData.map((item, index) => {\r\n              return (\r\n                <>\r\n                  <Link to={item.path}>\r\n                    <div\r\n                      className={`menu-bars ${\r\n                        location.pathname === item.path && \"active\"\r\n                      }`}\r\n                    >\r\n                      {item.title}\r\n                    </div>\r\n                  </Link>\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <nav\r\n          className={sidebar ? \"nav-menu active\" : \"nav-menu nav-menu-inactive\"}\r\n        >\r\n          <ul className=\"nav-menu-items\">\r\n            {sidebarData.map((item, index) => {\r\n              return (\r\n                <li key={index} className={item.cName}>\r\n                  <Link to={item.path} className={sidebar ? \"linkk\" : \"svg\"}>\r\n                    <span id=\"title\">{item.title}</span>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </IconContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import \"./hero.css\";\r\nvar n = 0;\r\nconst Hero = () => {\r\n  return (\r\n    <>\r\n      <div className=\"herocontainer\">\r\n        <div>\r\n          <div className=\"hero\">\r\n            <div className=\"type-writer\">\r\n              <h1 className=\"intro\">Hi! I'm Sarfaraj Ansari</h1>\r\n            </div>\r\n\r\n            <div class=\"pop-in-up\">\r\n              <hr className=\"hr-text\" data-content=\"AND\" />\r\n              <div className=\"label\" style={{ textAlign: \"center\" }}>\r\n                <h2>\r\n                  I <div className=\"sol\"></div> solutions to{\" \"}\r\n                  <div className=\"apps\"></div> web application\r\n                </h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <svg viewBox=\"0 0 1320 500\">\r\n            <path\r\n              fillOpacity=\"1\"\r\n              d=\"\r\n                        M0,192\r\n                        C220,100,440,100,660,192\r\n                        C880,290,1100,290,1320,192\r\n                        L1320 500\r\n                        L0 500\r\n                        \"\r\n              fill=\"#eceef1\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React, { useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport \"./animatedTitle.scss\";\r\nconst AnimatedTitle = ({ titleText }) => {\r\n  const containerRef = useRef(null);\r\n  useEffect(() => {\r\n    animateTitle();\r\n  }, []);\r\n\r\n  function animateTitle() {\r\n    const gsap = window.gsap;\r\n    let k = 0;\r\n    const ptags = containerRef.current.children;\r\n\r\n    for (var i = 0; i < ptags.length; i++) {\r\n      for (var j = 0; j < ptags[i].children.length; j++) {\r\n        k++;\r\n        gsap.to(\"#word\" + String(i) + \"letter\" + String(j), {\r\n          scrollTrigger: {\r\n            trigger: containerRef.current,\r\n            scrub: window.innerWidth <= 725 ? 0.01 : 1,\r\n            start: `${k * 15 + 50}px center`,\r\n          },\r\n          duration: 3,\r\n          translateY: -700,\r\n          delay: j,\r\n          rotate: \"90deg\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"animated-title-container\" ref={containerRef}>\r\n      {titleText.split(\" \").map((word, i) => {\r\n        return (\r\n          <p>\r\n            {word.split(\"\").map((letter, j) => {\r\n              let word_length =\r\n                (window.innerWidth / 100) * 6.5 <= 3 * 16\r\n                  ? 3 * 16\r\n                  : (window.innerWidth / 100) * 6.5;\r\n              word_length = word_length >= 8 * 16 ? 8 * 16 : word_length;\r\n              word_length = window.innerWidth < 600 ? 2.3 * 16 : word_length;\r\n              let l = word.split(\"\").length;\r\n              let left_spacing = (window.innerWidth - word_length * l) / 2;\r\n              left_spacing += (j - 0.5) * word_length;\r\n\r\n              return (\r\n                <span\r\n                  id={\"word\" + String(i) + \"letter\" + String(j)}\r\n                  style={{ left: left_spacing }}\r\n                >\r\n                  {letter}\r\n                </span>\r\n              );\r\n            })}\r\n          </p>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimatedTitle;\r\n","import \"./App.css\";\r\nimport \"./components/typography/typography.css\";\r\nimport Navbar from \"./components/navbar/Navbar\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Hero from \"./components/hero/Hero\";\r\nimport AnimatedTitle from \"./components/animatedTitle/animatedTitle\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div id=\"App-grid\" className=\"App\">\r\n        <div id=\"header\">\r\n          <Navbar />\r\n          <div id=\"banner-sm\"></div>\r\n        </div>\r\n        <div id=\"content\">\r\n          <Hero />\r\n          <div className=\"animated-title-container-outer\">\r\n            <AnimatedTitle titleText=\"ABOUT ME\" />\r\n          </div>\r\n          <div style={{ height: 500 }} />\r\n          <Switch></Switch>\r\n        </div>\r\n        <div id=\"footer\"></div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}